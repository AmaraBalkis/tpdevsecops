name: CI/CD - democyber

# Trigger the workflow on push or pull request to main
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/democyber:latest

    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install Java
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Gitleaks scan (before compilation)
      - name: Run Gitleaks scan
        uses: zricethezav/gitleaks-action@v2
       
      # # Upload the Gitleaks report
      # - name: Upload Gitleaks report
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: gitleaks-report
      #     path: results.sarif

      #  # Check if any secrets were detected and fail the pipeline
      # - name: Fail if secrets detected
      #   run: |
      #     if [ -s gitleaks-report.json ]; then
      #       echo "Secrets detected! Failing the pipeline."
      #       exit 1
      #     fi

        # Compile Java code
      - name: Compile Java
        run: mvn compile

      # Build Maven
      - name: Build Java project with Maven
        run: mvn clean package

      # Login Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      #  Build Docker image
      - name: Build Docker image
        run: docker build -t $DOCKER_IMAGE_NAME .

      #  Test rapide Docker image
      - name: Test Docker image locally
        run: |
          docker run -d --name democyber-test -p 8080:8080 $DOCKER_IMAGE_NAME
          sleep 10
          curl -f http://localhost:8080 || echo "App not responding"
          docker stop democyber-test
          docker rm democyber-test

      # #  Push Docker image sur Docker Hub
      # - name: Push Docker image
      #   run: docker push $DOCKER_IMAGE_NAME




# git config --global user.name "Votre Nom"
# git config --global user.email "votre.email@example.com"